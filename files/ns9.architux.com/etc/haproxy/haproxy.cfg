global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	## Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

# not public frontend 
listen private_http
  bind 0.0.0.0:80
  mode http
  # log format avec X-Forwarded-For
  log-format %ci\ -\ [%T]\ %{+Q}r\ %ST\ %B\ %{+Q}hrl\ %hr
  option httplog clf
  option forwardfor
  timeout http-request  60m
  timeout queue         60m
  timeout connect       10s
  timeout client        60m
  timeout server        60m

  acl is_transfert_host hdr_sub(host) -i transfert.opendns.io -i transfert.architux.com
  acl is_transfer_host hdr_sub(host) -i transfer.opendns.io -i transfer.architux.com

  capture request header Host             len 128

  use_backend transfert if is_transfer_host  

backend transfer
  mode http
  server transfer localhost:8080

backend transfert
  mode http
  server transfert localhost:8090
